* {
    box-sizing: border-box;
  }
  [hidden] {
    display: none !important;
  }
  
  /* 
    These rules apply to actual HTML elements with no labelling!
    So: they style the tags directly
  */
  
  html {
    min-width: 300px;
    overflow-x: hidden;
    overflow-y: scroll;
    /* these are specific to different browsers */
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    -webkit-text-size-adjust: 100%;
    -moz-text-size-adjust: 100%;
    text-size-adjust: 100%;
  }
  
  body {
    margin: 0;
    padding: 0;
  }
  
  
  
  h2 {
    color: #3B2434;
    margin:0;
    padding:0;
    padding-bottom:1.5rem;
    font-size: 2rem;
    text-align: center;
  }
  
  form {
    accent-color: hsla(120, 100%, 50%, 0.482);
    display: flex;
    flex-direction: column;
    gap: 10px;
    align-items: center;
  }
  
  
  @import url("./mapstyle.css");
  
  
  .wrapper {
    min-height: 100vh;
    background-color: #3B2434;
    display: flex;
    flex-direction: column;
    margin: 0;
    align-items: center;
  }

  .container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    align-items: center;
    flex: 1;

  }
  
  
  /*
    This rule implies that the H1 tag lives within another HTML tag
    It "inherits" some rules from the above
    Those rules won't apply to an h1 that's outside a block with the class of 'header'
  */
  
  .header {
    color: #f4e8ce;
    display: inline-flex;
    flex-direction: column;
  }
  .header h1 {
    text-align: center;
    font-size: 4rem;
    padding: 1.25rem;
    font-weight: 900;
    margin:0; /* removing the margin on h1 tags means the header pins to the top */
  
    /* box-shadows are fancy */
    box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%), 0 0 0 1px rgb(10 10 10 / 2%);
  }
  /*
    Rules can be combined on a block to apply the 'cascade' in order
    So you can use two classnames in a single class attribute
    like: <div class="box section">
  
    Rules may combine in unexpected ways - remember that the LAST thing written in this file will have "priority"
    And will be what displays in your client
  */
  
  .box {
    padding: 1.5rem;
    margin: 0 auto;
    background-color: #f4e8ce;
    color: #3B2434;
  }
  
  .left_section {
    align-self: center;
    border-radius: 10%;
    flex: 1 1 auto;
    max-width: max-content;
    margin: 1rem;
    padding: 1.5rem;
  }
  
  .right_section {
    display: flex;
    border-radius: 10%;
    flex-direction: column;
    flex: 1 1 auto;
    max-width: 700px;
    margin: 1rem;
    align-items: center;
    justify-content: center;
  }
  
  .Hotpot {
    margin-top: 50px;
    width: 200px;
    height: 200px;
  }

  form input {
    /* This is a hack to make sure our boxes line up with one another nicely */
    width: 100%;
    width: -moz-available;          /* WebKit-based browsers will ignore this. */
    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */
    width: fill-available;
  
    /* here we are setting white space correctly */
    margin-bottom: 1rem;
    height: 2rem;
    border-radius: 4px;
  }
  


  form label {
    width: 100%;
    width: -moz-available;          /* WebKit-based browsers will ignore this. */
    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */
    width: fill-available;
    align-items: flex-start;
  
    display: block; /* this turns the label text into a box we can set margins on */
    margin-bottom: 0.5rem;
  }

  button {
    background-color: #CEDAF4;
    border: none;
    border-radius: 10%;
  }
