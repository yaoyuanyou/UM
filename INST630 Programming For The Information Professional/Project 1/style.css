/******************************************************************************
START Lab Basic Page Styles
******************************************************************************/

/* Our default values set as CSS variables */
:root {
    --color-gray: rgb(239, 239, 239);
    --color-text: rgb(74, 74, 74);
    --color-bg: #69F7BE;
    --color-text-main: #000000;
    --color-primary: #FFFF00;
    --wrapper-height: 87vh;
    --image-max-width: 300px;
    --image-margin: 3rem;
    --font-family: 'Noto Sans', sans-serif;
    --font-weight: 400;
    --line-height: 1.5;
  }
  
  /* Basic page style resets */
  * {
    box-sizing: border-box;
  }
  [hidden] {
    display: none !important;
  }
  
  /* 
    These rules apply to actual HTML elements with no labelling!
    So: they style the tags directly
  */
  
  html {
    background-color: var(--color-bg);
    font-size: 16px;
    min-width: 300px;
    overflow-x: hidden;
    overflow-y: scroll;
  
    /* these are specific to different browsers */
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    -webkit-text-size-adjust: 100%;
    -moz-text-size-adjust: 100%;
    text-size-adjust: 100%;
  }
  
  body {
    font-family: var(--font-family); /*  This is an example of a custom CSS property  */
    margin: 0;
    padding: 0;
    background-color: var(--color-gray) ;
    color: var(--color-text);
  }
  
  
  
  h2 {
    margin:0;
    padding:0;
    padding-bottom:1.5rem;
    font-size: 2rem;
  }
  
  form {
    accent-color: hsla(120, 100%, 50%, 0.482);
    display: flex;
    flex-direction: column;
    gap: 10px;
    align-items: center;
  }
  
  /******************************************************************************
  IMPORT DECLARATIONS
  
  these import styles from other sheets, in order
  ******************************************************************************/
  
  @import url("./mapstyle.css");
  
  /******************************************************************************
  CLASS DECLARATIONS
  
    - These styles use 'class names'
    - You can apply them by using the 'class' attribute on your HTML
    - like this: <div class="wrapper">
    - note that the period vanishes there!
  ******************************************************************************/
  
  .wrapper {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    margin: 0;
  }

  .container {
    margin: 0 20px;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    align-items: center;
    flex: 1;
  }
  
  
  /*
    This rule implies that the H1 tag lives within another HTML tag
    It "inherits" some rules from the above
    Those rules won't apply to an h1 that's outside a block with the class of 'header'
  */
  
  .header h1 {
    text-align: center;
    /* this will push other blocks out of the way */
  
    /* colors */
    color: white;
    background-color: black;
  
    /* shapes */
    font-size: 2.2rem;
    padding: 1.25rem;
    margin:0; /* removing the margin on h1 tags means the header pins to the top */
  
    /* box-shadows are fancy */
    box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%), 0 0 0 1px rgb(10 10 10 / 2%);
  }
  
  /*
    Rules can be combined on a block to apply the 'cascade' in order
    So you can use two classnames in a single class attribute
    like: <div class="box section">
  
    Rules may combine in unexpected ways - remember that the LAST thing written in this file will have "priority"
    And will be what displays in your client
  */
  
  .box {
    padding: 1.5rem;
    margin: 0 auto;
  }
  
  .left_section {
    background-color: aliceblue;
    align-self: center;
    border-radius: 10%;
    flex: 1 1 auto;
    max-width: max-content;
    margin: 1rem;
    padding: 1.5rem;
  }
  
  .right_section {
    display: flex;
    background-color: antiquewhite;
    border-radius: 10%;
    flex-direction: column;
    flex: 1 1 auto;
    max-width: 700px;
    margin: 1rem;
    align-items: center;
    justify-content: center;
  }
  
  .Hotpot {
    margin-top: 50px;
    width: 200px;
    height: 200px;
  }
  /*
    This block is actually dependent on the "container" block having a flex set on it
    and the "wrapper" block displaying as a flex column with a "vertical height" (vh) of 100.
    That serves to cram the footer to the bottom of the page.
  */
  
  footer {
    background-color: black;
    padding: 1rem;
    display: flex;
    justify-content: center;
    gap: 10px;
  }

  
  
  /*
    This is an example of a 'pseudoclass'
    In this instance, it says what to do if a mouse hovers over a link
    This is pretty desktop-specific, since there's no hover function on touchscreens
  */
  
  /*
  Form Styles
  */

  form input {
    /* This is a hack to make sure our boxes line up with one another nicely */
    width: 100%;
    width: -moz-available;          /* WebKit-based browsers will ignore this. */
    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */
    width: fill-available;
  
    /* here we are setting white space correctly */
    margin-bottom: 1rem;
    height: 2rem;
    border-radius: 4px;
  }
  

  .img_contact {
    width: 30px;
    height: 30px;
  }

  form label {
    width: 100%;
    width: -moz-available;          /* WebKit-based browsers will ignore this. */
    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */
    width: fill-available;
    align-items: flex-start;
  
    display: block; /* this turns the label text into a box we can set margins on */
    margin-bottom: 0.5rem;
  }

  button {
    background-color: #6291d8;
    border: none;
    border-radius: 10%;
  }